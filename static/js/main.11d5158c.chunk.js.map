{"version":3,"sources":["atoms.tsx","components/CreateCustomCategories.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","persistAtom","recoilPersist","categoryState","atom","key","default","TO_DO","effects_UNSTABLE","toDoState","customCategories","toDoSelector","selector","get","toDos","category","filter","toDo","CreateCustomCategories","useSetRecoilState","setCustomValue","useRecoilValue","useForm","register","handleSubmit","setValue","console","log","onSubmit","categories","prev","required","placeholder","CreateToDo","setToDos","oldToDos","text","id","Date","now","ToDo","useRecoilState","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","DOING","DONE","ToDoList","setCategory","customCategory","value","onInput","map","item","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.11d5158c.chunk.js","sourcesContent":["import { atom, selector } from 'recoil';\nimport { recoilPersist } from 'recoil-persist';\nconst { persistAtom } = recoilPersist();\n\nexport enum Categories {\n  'TO_DO' = 'TO_DO',\n  'DOING' = 'DOING',\n  'DONE' = 'DONE',\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: any;\n}\n\nexport const categoryState = atom<any>({\n  key: 'category',\n  default: Categories.TO_DO,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: 'toDo',\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const customCategories = atom<string[]>({\n  key: 'customCategory',\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const toDoSelector = selector({\n  key: 'toDoSelector',\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from 'react-hook-form';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { categoryState, customCategories, toDoState } from '../atoms';\n\ninterface IForm {\n  categories: string;\n}\n\nfunction CreateCustomCategories() {\n  const setToDos = useSetRecoilState(toDoState);\n  const setCustomValue = useSetRecoilState(customCategories);\n  const category = useRecoilValue(categoryState);\n\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ categories }: IForm) => {\n    setCustomValue((prev) => [...prev, categories]);\n    setValue('categories', '');\n  };\n  console.log(category, 'category');\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register('categories', {\n          required: 'Please write custom categories',\n        })}\n        placeholder='Write a custom category'\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateCustomCategories;\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { Categories, customCategories, IToDo, toDoState } from '../atoms';\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const [customeCategory, setCustomCategory] = useRecoilState(customCategories);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n}\n\nexport default ToDo;\n","import React from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport {\n  Categories,\n  categoryState,\n  customCategories,\n  toDoSelector,\n} from '../atoms';\nimport CreateCustomCategories from './CreateCustomCategories';\nimport CreateToDo from './CreateToDo';\nimport ToDo from './ToDo';\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const customCategory = useRecoilValue(customCategories);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n  console.log(customCategory, 'category111');\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <hr />\n      <select value={category} onInput={onInput}>\n        <option value={Categories.TO_DO}>To Do</option>\n        <option value={Categories.DOING}>Doing</option>\n        <option value={Categories.DONE}>Done</option>\n        {customCategory?.map((item) => (\n          <option value={item}>{item} </option>\n        ))}\n      </select>\n      <div>\n        <CreateToDo />\n        <CreateCustomCategories />\n      </div>\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}